name: CI

on:
  workflow_dispatch:
    inputs:
      username:
        description: 'Name'
        required: true
      password:
        description: 'Password'
        required: true

jobs:
  authenticate_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate
        run: |
          INPUT_HASH=$(echo -n "${{ github.event.inputs.username }}:${{ github.event.inputs.password }}" | sha256sum | awk '{print $1}')
          echo "Input Hash: $INPUT_HASH"  # Debug: Show the computed hash of the input
          IFS=',' read -ra HASHES <<< "${{ secrets.HASH_CREDENTIALS }}"
          AUTHENTICATED="false"
          for HASH in "${HASHES[@]}"; do
            IFS=':' read -r USERNAME HASHED_PASS <<< "$HASH"
            echo "Checking against stored hash for $USERNAME"  # Debug: Show which user is being checked
            if [[ "${{ github.event.inputs.username }}" == "$USERNAME" && "$INPUT_HASH" == "$HASHED_PASS" ]]; then
              AUTHENTICATED="true"
              break
            fi
          done
      
          if [[ "$AUTHENTICATED" == "true" ]]; then
            echo "Authentication successful."
          else
            echo "Authentication failed."
            exit 1
          fi
            
      - name: Push inputs.txt to target repository
        uses: dmnemec/copy_file_to_another_repo_action@v1.1.1
        with:
          source_file: 'Inputs/inputs.txt'
          destination_repo: 'Osiris-B/workflow-test-2'
          destination_folder: 'Inputs'
          commit_message: 'Add inputs.txt'
          target_branch: 'main'
          github_token: ${{ secrets.API_TOKEN_GITHUB }}

      - name: Push output.txt to target repository
        uses: dmnemec/copy_file_to_another_repo_action@v1.1.1
        with:
          source_file: 'Outputs/output.txt'
          destination_repo: 'Osiris-B/workflow-test-2'
          destination_folder: 'Outputs'
          commit_message: 'Add output.txt'
          target_branch: 'main'
          github_token: ${{ secrets.API_TOKEN_GITHUB }}

